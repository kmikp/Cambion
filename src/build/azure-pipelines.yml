trigger: none

pool:
  name: 'Whitestone'
  
stages:
- stage: 'Build'
  displayName: 'Build'
  variables:
  - group: 'RabbitMQ Test Parameters'
  jobs:
  - job: 'Build'
    displayName: 'Build, test and pack'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK 3.1.x'
      inputs:
        packageType: 'sdk'
        version: '3.1.x'
    - task: gitversion/setup@0
      displayName: 'Setup GitVersion 5.x'
      inputs:
        versionSpec: '5.x'
    - task: gitversion/execute@0
      displayName: 'Execute GitVersion'
    - task: DotNetCoreCLI@2
      displayName: 'Perform tests'
      inputs:
        command: 'test'
        projects: '**/*.Test.csproj'
        arguments: '-c Debug'
      env:
        RABBITMQTEST_RABBITMQ__CONNECTIONSTRING: $(RabbitMq.Test.ConnectionString)
        RABBITMQTEST_RABBITMQ__HOSTNAME: $(RabbitMq.Test.Hostname)
        RABBITMQTEST_RABBITMQ__USERNAME: $(RabbitMq.Test.Username)
        RABBITMQTEST_RABBITMQ__PASSWORD: $(RabbitMq.Test.Password)
        RABBITMQTEST_RABBITMQ__VIRTUALHOST: $(RabbitMq.Test.VirtualHost)
    - task: DotNetCoreCLI@2
      displayName: 'Build and pack projects for NuGet'
      inputs:
        command: 'custom'
        projects: |
          **/*.csproj
          !**/*.Test.csproj
        custom: 'pack'
        arguments: '/p:PackageVersion=$(GitVersion.MajorMinorPatch)-$(GitVersion.PreReleaseLabel)-$(GitVersion.BuildMetaData) /p:Version=$(GitVersion.FullSemVer) /p:InformationalVersion=$(GitVersion.MajorMinorPatch)-$(GitVersion.PreReleaseLabel)-$(GitVersion.BuildMetaData) -o $(Build.ArtifactStagingDirectory) -c Debug'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'CambionBuildArtifacts'
        publishLocation: 'pipeline'
    - task: PowerShell@2
      displayName: 'DEBUG: Environment Variables'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "************************************"
          Write-Host "*** ENVIRONMENT VARIABLES ***"
          Write-Host "************************************"
          Get-ChildItem Env: | Format-Table -AutoSize
          Write-Host "***********************"
          Write-Host "*** OTHER VARIABLES ***"
          Write-Host "***********************"
          Write-Host "Build.ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)"
          Write-Host "System.ArtifactsDirectory     : $(System.ArtifactsDirectory)"
          Write-Host "Pipeline.Workspace            : $(Pipeline.Workspace)"
        errorActionPreference: 'continue'
      enabled: true
    - task: PowerShell@2
      displayName: 'DEBUG IN PRERELEASE'
      inputs:
        targetType: 'Inline'
        script: Write-Host "SCRIPT WITH PRERELEASE CONDITION"
      condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
    - task: PowerShell@2
      displayName: 'DEBUG IN RELEASE'
      inputs:
        targetType: 'Inline'
        script: Write-Host "SCRIPT WITH RELEASE CONDITION"
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
- stage: DeployPrerelease
  displayName: 'Deploy Prerelease'
  dependsOn: Build
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: DeployPrerelease
    displayName: 'Deploy prerelease to NuGet'
    environment: 'Cambion Prerelease'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: deploy-template.yml
            parameters:
              artifactName: 'CambionBuildArtifacts'
- stage: DeployRelease
  displayName: 'Deploy Release'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: DeployRelease
    displayName: 'Deploy release to NuGet'
    environment: 'Cambion Release'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: deploy-template.yml
            parameters:
              artifactName: 'CambionBuildArtifacts'