trigger: none

pool:
  name: 'Whitestone'
  
stages:
- stage: 'BuildPrerelease'
  displayName: 'Build Prerelease'
  variables:
  - group: 'RabbitMQ Test Parameters'
  jobs:
  - job: 'Build'
    displayName: 'Build, test and pack'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK 3.1.x'
      inputs:
        packageType: 'sdk'
        version: '3.1.x'
    - task: gitversion/setup@0
      displayName: 'Setup GitVersion 5.x'
      inputs:
        versionSpec: '5.x'
    - task: gitversion/execute@0
      displayName: 'Execute GitVersion'
    - task: DotNetCoreCLI@2
      displayName: 'Perform tests'
      inputs:
        command: 'test'
        projects: '**/*.Test.csproj'
        arguments: '-c Debug'
      env:
        RABBITMQTEST_RABBITMQ__CONNECTIONSTRING: $(RabbitMq.Test.ConnectionString)
        RABBITMQTEST_RABBITMQ__HOSTNAME: $(RabbitMq.Test.Hostname)
        RABBITMQTEST_RABBITMQ__USERNAME: $(RabbitMq.Test.Username)
        RABBITMQTEST_RABBITMQ__PASSWORD: $(RabbitMq.Test.Password)
        RABBITMQTEST_RABBITMQ__VIRTUALHOST: $(RabbitMq.Test.VirtualHost)
    - task: DotNetCoreCLI@2
      displayName: 'Build and pack projects for NuGet'
      inputs:
        command: 'custom'
        projects: |
          **/*.csproj
          !**/*.Test.csproj
        custom: 'pack'
        arguments: '/p:PackageVersion=$(GitVersion.MajorMinorPatch)-$(GitVersion.PreReleaseLabel)-$(GitVersion.BuildMetaData) /p:Version=$(GitVersion.FullSemVer) /p:InformationalVersion=$(GitVersion.MajorMinorPatch)-$(GitVersion.PreReleaseLabel)-$(GitVersion.BuildMetaData) -o $(Build.ArtifactStagingDirectory) -c Debug'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'CambionPrereleaseArtifacts'
        publishLocation: 'pipeline'
    - task: PowerShell@2
      displayName: 'DEBUG: Environment Variables'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "************************************"
          Write-Host "*** ENVIRONMENT VARIABLES ***"
          Write-Host "************************************"
          Get-ChildItem Env: | Format-Table -AutoSize
          Write-Host "***********************"
          Write-Host "*** OTHER VARIABLES ***"
          Write-Host "***********************"
          Write-Host "Build.ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)"
          Write-Host "System.ArtifactsDirectory     : $(System.ArtifactsDirectory)"
          Write-Host "Pipeline.Workspace            : $(Pipeline.Workspace)"
        errorActionPreference: 'continue'
      enabled: true
- stage: DeployPrerelease
  displayName: 'Deploy Prerelease'
  dependsOn: BuildPrerelease
  jobs:
  - deployment: DeployPrerelease
    displayName: 'Deploy prerelease to NuGet'
    environment: 'Cambion Prerelease'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: NuGetCommand@2
              displayName: 'Push prerelease packages to NuGet'
              inputs:
                command: 'push'
                packagesToPush: '$(Pipeline.Workspace)/CambionPrereleaseArtifacts/*.nupkg'
                nuGetFeedType: 'external'
                publishFeedCredentials: 'NuGet (Whitestone)'
                verbosityPush: 'Normal'
              enabled: false
            - task: PowerShell@2
              displayName: 'Clean up artifacts folder'
              inputs:
                targetType: inline
                script: |
                  Remove-Item -Path "$(Pipeline.Workspace)/CambionPrereleaseArtifacts" -Recurse -Force
- stage: BuildRelease
  displayName: 'Tag and build Release'
  dependsOn: DeployPrerelease
  variables:
  - group: 'RabbitMQ Test Parameters'
  jobs:
  - deployment: CreateGitHubRelease
    displayName: 'Create GitHub Release'
    environment: 'Cambion Release'
    strategy:
      runOnce:
        preDeploy:
          steps:
            - task: PowerShell@2
              displayName: 'DEBUG Predeploy'
              inputs:
                targetType: inline
                script: |
                  Write-Host "*****************"
                  Write-Host "*** Predeploy ***"
                  Write-Host "*****************"
                  Write-Host "Merge release branch to master"
                  Write-Host "Tag master"
                  Write-Host "Test and pack master"
                  Get-ChildItem Env: | Format-Table -AutoSize
        deploy:
          steps:
          - task: PowerShell@2
            displayName: 'DEBUG Deploy'
            inputs:
              targetType: inline
              script: |
                Write-Host "**************"
                Write-Host "*** Deploy ***"
                Write-Host "**************"
                Write-Host "Deploy packages to NuGet"
                Get-ChildItem Env: | Format-Table -AutoSize